{
  "name": "zipcodes",
  "description": "Useful zipcode database with helper methods",
  "version": "0.1.0",
  "author": {
    "name": "Dav Glass",
    "email": "davglass@gmail.com"
  },
  "bugs": {
    "url": "http://github.com/davglass/zipcodes/issues"
  },
  "os": [
    "darwin",
    "linux"
  ],
  "engines": {
    "node": ">=0.4.0"
  },
  "main": "./lib/index.js",
  "licenses": [
    {
      "type": "BSD",
      "url": "http://github.com/davglass/zipcodes/"
    }
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/davglass/zipcodes.git"
  },
  "readme": "Zip Code Lookups\n================\n\nA localized (flatfile) zipcode lookup.\n\nZipcode data was taken from here: http://federalgovernmentzipcodes.us/\n\nIt was then transformed into a JSON object and then wrapped with some helper methods.\n\nUsage\n-----\n\n    var zipcodes = require('zipcodes');\n\n\nZipcode Lookup\n--------------\n\n    var hills = zipcodes.lookup(90210);\n\n    { zip: '90210',\n      latitude: 34.088808,\n      longitude: -118.406125,\n      city: 'Beverly Hills',\n      state: 'CA' }\n\nDistance\n--------\n\nThis is not driving distance, it's line of sight distance\n\n\n    var dist = zipcodes.distance(62959, 90210); //In Miles\n    // dist = 1662\n\n    var kilo = zipcodes.toKilometers(dist); //Convert to Kilometers\n    // kilo = 2675\n\n    var miles = zipcodes.toMiles(zipcodes.toKilometers(dist)); //Convert to Kilometers, then to miles\n    // miles = 1662\n\n\nLookup By Name\n--------------\n\n    var l = zipcodes.lookupByName('Cupertino', 'CA');\n    \n    //Always returns an array, since cities can have multiple zip codes\n    [ { zip: '95015',\n        latitude: 37.323,\n        longitude: -122.0527,\n        city: 'Cupertino',\n        state: 'CA' } ]\n\n\nLookup by Radius\n----------------\n\nGet all zipcodes within the milage radius of this zipcode\n\n    var rad = zipcodes.radius(95014, 50);\n    // rad.length == 385\n\n    [ '93901',\n      '93902',\n      '93905',\n      '93906',\n      '93907',\n      '93912',\n      '93933',\n      '93942',\n      '93944',\n      '93950',\n      ...\n      '95377',\n      '95378',\n      '95385',\n      '95387',\n      '95391' \n    ]\n\n\nTODO\n----\n\nAdd support for importing into MongoDB or CouchDB to speed up searchs.\n\nDevelopment\n-----------\n\nThe original CSV file that I am using for this data is not included in this repo, but I did wrap up\nthe best way to get the data and how to convert it into the format that this module uses.\n\nTo develop with this module, just `make` it and it will fetch the latest zipcodes and reprocess them.\n\n    make\n\nTo just fetch and process the zipcodes:\n\n    make codes\n\nTo run the very simple test suite:\n\n    make tests\n",
  "readmeFilename": "README.md",
  "_id": "zipcodes@0.1.0",
  "dist": {
    "shasum": "0b216bab6eff73a00d99406f9e614f3c532625b3"
  },
  "_from": "zipcodes@",
  "_resolved": "https://registry.npmjs.org/zipcodes/-/zipcodes-0.1.0.tgz"
}
