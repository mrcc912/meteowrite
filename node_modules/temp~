    User.findOne({id : userID, api_key: api_key}, function(err, user){
	if(err) throw err;
	if(!user)
	{
	    createUser(userID, api_key, new Object(), function(newuser){
		var art_id = parseInt(articleID);
		Article.findOne({id: art_id, api_key:api_key}, function(err, article){
		    if(err) throw err;
		    if(!article)
		    {
			func("articleID does not exist in database");
			return;
		    }
		    else{
			// if the article has not already been read by that user, mark it read
			if(article.readers.indexOf(userID) < 0)
			    article.readers.push(userID);
			
			article.save(function(err, doc){
			    if(err) throw err;
			    if(doc){}
			});
			for(i in article.keywords) 
			{
			    var textMap = article.keywords[i];
			    var word = textMap["text"];
			    
			    if(word.indexOf(".") != -1) 
				continue;
			    var relev = textMap["relevance"];
			    insertKeywordIntoList(word, relev, newuser.keywords);
			}
			
			//for(var i = 0; i<article.keywordsCalais.length; i++)
			for(i in article.keywordsCalais)
			{
			    var textMap = article.keywordsCalais[i];
			    var word = textMap["text"];
			    if(word.indexOf(".") != -1)
				continue;
			    var relev = textMap["relevance"];
			    insertKeywordIntoList(word, relev, newuser.keywords);
			}
			newuser.articlesRead.push(art_id);
			newuser.markModified('keywords');
			newuser.save(function(err, new_user){if(err) throw err;});
			func("Article has been marked read");
		    }
		});
		else {
		    func("Article already read by that user");
		}
	    });
	}
	else if(user)
	{
	    var art_id = parseInt(articleID);
            var bool = 0;
            for(var i = 0; i < user.articlesRead.length; i = i + 1) {
		if(user.articlesRead[i] == art_id) {
                    bool = 1;
		}
            }
            if(bool == 0) {
		Article.findOne({id: art_id, api_key:api_key}, function(err, article){
		    if(err) throw err;
		    if(!article)
		    {
			func("articleID does not exist in database");
			return;
		    }
		    else{
		    // if the article has not already been read by that user, mark it read
		    if(article.readers.indexOf(userID) < 0)
			article.readers.push(userID);

		    article.save(function(err, doc){
			if(err) throw err;
			if(doc)
			{
			    //huzzah! article saved correctly

			}
		    });
		    for(i in article.keywords) 
		    {
			var textMap = article.keywords[i];
			var word = textMap["text"];

			if(word.indexOf(".") != -1) 
			    continue;
			var relev = textMap["relevance"];
			insertKeywordIntoList(word, relev, user.keywords);
		    }

                    //for(var i = 0; i<article.keywordsCalais.length; i++)
		    for(i in article.keywordsCalais)
                    {
			var textMap = article.keywordsCalais[i];
			var word = textMap["text"];
			if(word.indexOf(".") != -1)
			    continue;
			var relev = textMap["relevance"];
			insertKeywordIntoList(word, relev, user.keywords);
                    }
		  

                    /*
		    for(var i = 0; i<article.keywordsCore.length; i++)
                    {
			var textMap = article.keywordsCore[i];
			var word = textMap["text"];
			if(word.indexOf(".") != -1)
			    continue;
			var relev = textMap["relevance"];
			if(word in user.keywords) {
			    user.keywords[word] += relev;
			}
			else {
			    user.keywords[word] = relev;
			}
                    }
		    */
		    user.articlesRead.push(art_id);
		    user.markModified('keywords');
		    user.save(function(err, new_user){
			if(err) throw err;
			if(new_user)
			{
			}
		    });
                    func(user);
		    }
		});
            }
            else {
		func("Article already read by that user");
            }
	}
    });
